#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble

\usepackage{listings}
\lstset{
basicstyle=\ttfamily\footnotesize,
keepspaces=true,
tabsize=4,
breaklines=true,
columns=fullflexible,
mathescape=true
}
\usepackage{fullpage}
\usepackage{tikz}
\usepackage{braket}
\end_preamble
\use_default_options true
\begin_modules
enumitem
duarte_theorems
duarte_theorems_exercises
\end_modules
\maintain_unincluded_children no
\language english
\language_package default
\inputencoding auto-legacy
\fontencoding auto
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\float_alignment class
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letter
\use_geometry false
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification false
\use_refstyle 1
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Title
Quantum Computing W2025,
 Homework 1
\end_layout

\begin_layout Author
Duarte Maia
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\CNOT}{\mathrm{CNOT}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\TOFFOLI}{\mathrm{TOFFOLI}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\FREDKIN}{\mathrm{FREDKIN}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\tr}{\intercal}
\end_inset


\begin_inset FormulaMacro
\newcommand{\adj}{\dag}
\end_inset


\begin_inset FormulaMacro
\newcommand{\I}{\mathrm{i}}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\braket}[1]{}
{\left\langle #1\right\rangle }
\end_inset


\begin_inset FormulaMacro
\newcommand{\ket}[1]{}
{\left|#1\right\rangle }
\end_inset


\begin_inset FormulaMacro
\newcommand{\bra}[1]{}
{\left\langle #1\right|}
\end_inset


\begin_inset FormulaMacro
\newcommand{\Z}{\mathbb{Z}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\ord}{\mathop{{\rm ord}}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\e}{{\rm e}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\Norm}[1]{\left\Vert #1\right\Vert }
\end_inset


\begin_inset FormulaMacro
\newcommand{\abs}[1]{\left|#1\right|}
\end_inset


\end_layout

\begin_layout Standard

\shape italic
Note:

\shape default
 Throughout,
 I use the convention 
\begin_inset Formula $2=\{0,1\}$
\end_inset

.
\end_layout

\begin_layout Exercise
Is it possible to compute the order of 
\begin_inset Formula $a\in\Z_{N}^{*}$
\end_inset

 using the operator 
\begin_inset Formula $V_{a}\ket x=\ket{ax+1\bmod N}$
\end_inset

?
\end_layout

\begin_layout Solution
My answer is YES.
\end_layout

\begin_layout Solution
First,
 I claim that the powers 
\begin_inset Formula $V_{a}^{2^{t}}$
\end_inset

 can be efficiently calculated.
 This is because iterating a linear function gives another linear function,
 and so every power 
\begin_inset Formula $V_{a}^{2^{t}}$
\end_inset

 is of the form 
\begin_inset Formula $\ket x\mapsto\ket{Ax+B\bmod M}$
\end_inset

.
 In particular,
 every such power is computed by a small circuit,
 and moreover these circuits are uniform because we can find the coefficients for 
\begin_inset Formula $V_{a}^{2^{t}}$
\end_inset

 in time linear in 
\begin_inset Formula $t$
\end_inset

,
 e.g.
\begin_inset space \space{}
\end_inset

by repeatedly squaring the matrix 
\begin_inset Formula $\left[\begin{smallmatrix}A & B\\
0 & 1
\end{smallmatrix}\right]$
\end_inset

.
\end_layout

\begin_layout Solution
Now,
 let us consider the eigenvectors of 
\begin_inset Formula $V_{a}$
\end_inset

.
 For this,
 I look at the orbit of 
\begin_inset Formula $V_{a}\ket x$
\end_inset

.
 It is easy to show by induction that the following formula holds:
\begin_inset Formula 
\[
V_{a}^{s}\ket x=\ket{a^{s}x+\frac{a^{s}-1}{a-1}\bmod N}.
\]

\end_inset

(This is where the assumption that 
\begin_inset Formula $a-1$
\end_inset

 is invertible mod 
\begin_inset Formula $N$
\end_inset

 comes in.)
\end_layout

\begin_layout Solution
It turns out that the orbit of 
\begin_inset Formula $\ket 0$
\end_inset

 and of 
\begin_inset Formula $\ket 1$
\end_inset

 are the same,
 because 
\begin_inset Formula $V_{a}\ket 0=\ket 1$
\end_inset

,
 so I can pick either of these as initialization.
 I will pick 
\begin_inset Formula $\ket 0$
\end_inset

,
 because it makes the arithmetic slightly simpler.
\end_layout

\begin_layout Solution
So,
 let's consider the eigenvectors of 
\begin_inset Formula $V_{a}$
\end_inset

 that will be useful to us.
 Henceforth,
 let 
\begin_inset Formula $\ord$
\end_inset

 be the order of 
\begin_inset Formula $a$
\end_inset

.
 (In the notes and in class this has been denoted by 
\begin_inset Formula $r$
\end_inset

.) For 
\begin_inset Formula $k=1,\dots,\ord$
\end_inset

,
 we set
\begin_inset Formula 
\[
\ket{\psi_{k}}=\frac{1}{\sqrt{\ord}}\sum_{s=1}^{\ord}\e^{2\I\pi\frac{ks}{\ord}}\ket{\frac{a^{s}-1}{a-1}\bmod N}=\frac{1}{\sqrt{\ord}}\sum_{s=1}^{\ord}\e^{2\I\pi\frac{ks}{\ord}}V_{a}^{s}\ket 0.
\]

\end_inset

Evidently,
 we have 
\begin_inset Formula $V_{a}\ket{\psi_{k}}=\e^{-2\I\pi\frac{k}{\ord}}\ket{\psi_{k}}$
\end_inset

,
 so these are all eigenvectors.
 Moreover,
 we can write
\begin_inset Formula 
\[
\ket 0=\frac{1}{\sqrt{\ord}}\sum_{j=1}^{\ord}\ket{\psi_{k}},
\]

\end_inset

and so 
\begin_inset Formula $\ket 0$
\end_inset

 is a uniform superposition of these eigenvectors 
\begin_inset Formula $\ket{\psi_{k}}$
\end_inset

.
 The rest of the argument proceeds as we did for the original Shor's algorithm:
 Applying the phase-finding algorithm to 
\begin_inset Formula $V_{a}$
\end_inset

 with the initial state 
\begin_inset Formula $\ket 0$
\end_inset

 will yield a close approximation 
\begin_inset Formula $q$
\end_inset

 of 
\begin_inset Formula $\frac{k}{\ord}$
\end_inset

 for a uniformly chosen value of 
\begin_inset Formula $k$
\end_inset

 in 
\begin_inset Formula $\left[0,\ord\right[$
\end_inset

,
 and then with high enough probability we have 
\begin_inset Formula $k$
\end_inset

 coprime with 
\begin_inset Formula $\ord$
\end_inset

 (assuming that 
\begin_inset Formula $N$
\end_inset

 is not divisible by 2),
 and the continued fraction expansion of 
\begin_inset Formula $q$
\end_inset

 will in that case give us a few good candidates for 
\begin_inset Formula $\ord$
\end_inset

.
\end_layout

\begin_layout Exercise
Consider the following generalization of Deutsch-Josza:
\begin_inset Formula 
\[
F(X):=\begin{cases}
0 & \text{if \ensuremath{X} is constant,}\\
1 & \text{if \ensuremath{\sum X_{i}\in[\ell,N-\ell]},}\\
\text{undefined} & \text{otherwise.}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Exercise
Prove that 
\begin_inset Formula $Q_{2}(F)=\Theta(\sqrt{N/\ell})$
\end_inset

.
\end_layout

\begin_layout Solution
(Upper bound??)
\end_layout

\begin_layout Solution
For the lower bound,
 consider an arbitrary circuit,
 applying 
\begin_inset Formula $n$
\end_inset

 calls to the oracle 
\begin_inset Formula $U_{X}\ket{xy}=\ket x\otimes U^{X_{x}}\ket y$
\end_inset

 where 
\begin_inset Formula $U$
\end_inset

 is an arbitrary fixed unitary operator,
 and 
\begin_inset Formula $U^{X_{x}}$
\end_inset

 means 
\begin_inset Quotes eld
\end_inset

Identity if 
\begin_inset Formula $X_{x}=0$
\end_inset

,
 
\begin_inset Formula $U$
\end_inset

 if 
\begin_inset Formula $X_{x}=1$
\end_inset


\begin_inset Quotes erd
\end_inset

.
 As in class,
 suppose that this circuit has the form 
\begin_inset Formula $U_{n}U_{X}U_{n-1}\dots U_{1}U_{X}U_{0}\ket 0$
\end_inset

,
 and we define 
\begin_inset Formula $\ket{\psi_{j}^{X}}=U_{j}U_{X}U_{j-1}\dots U_{0}\ket 0$
\end_inset

.
\end_layout

\begin_layout Solution
With a little loss of generality,
 let us assume 
\begin_inset Formula $N$
\end_inset

 is a multiple of 
\begin_inset Formula $\ell$
\end_inset

;
 the following argument works with some tedious modification and approximation if this isn't the case.
 If 
\begin_inset Formula $N=m\ell$
\end_inset

,
 we define the function 
\begin_inset Formula $X^{k}$
\end_inset

 as the characteristic function of 
\begin_inset Formula $\left[m\ell,m\ell+\ell\right[$
\end_inset

,
 for 
\begin_inset Formula $k=0,\dots,m-1$
\end_inset

.
 Set 
\begin_inset Formula $V=U_{0}=I$
\end_inset

,
 and set 
\begin_inset Formula $V_{k}=U_{X^{k}}$
\end_inset

.
 Finally,
 set 
\begin_inset Formula $\ket{\psi_{j}}=\ket{\psi_{j}^{0}}$
\end_inset

 and 
\begin_inset Formula $\ket{\psi_{j}^{k}}=\ket{\psi_{j}^{X^{k}}}$
\end_inset

.
\end_layout

\begin_layout Solution
We estimate the following quantity:
\begin_inset Formula 
\[
D_{j}=\sum_{k}\Norm{\ket{\psi_{j}}-\ket{\psi_{j}^{k}}}^{2},
\]

\end_inset

by establishing a recursive inequality for 
\begin_inset Formula $D_{j+1}$
\end_inset

 in terms of 
\begin_inset Formula $D_{j}$
\end_inset

.
 As in class,
 applying the operator 
\begin_inset Formula $U_{j+1}$
\end_inset

 does not change any of the norms,
 and so we estimate
\begin_inset Formula 
\begin{align}
\begin{aligned}D_{j+1} & =\sum_{k}\Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}^{k}}}^{2}\\
 & \leq\sum_{k}\begin{aligned} & \Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}}}^{2}+\Norm{V_{k}\ket{\psi_{j}}-V_{k}\ket{\psi_{j}^{k}}}^{2}\\
 & +2\Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}}}\Norm{V_{k}\ket{\psi_{j}}-V_{k}\ket{\psi_{j}^{k}}}
\end{aligned}
 &  & \text{(Triangle Inequality)}\\
 & \leq\sum_{k}\begin{aligned} & \Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}}}^{2}+\Norm{\ket{\psi_{j}}-\ket{\psi_{j}^{k}}}^{2}\\
 & +2\Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}}}\Norm{\ket{\psi_{j}}-\ket{\psi_{j}^{k}}}
\end{aligned}
 &  & \text{(\ensuremath{V_{k}} unitary)}\\
 & \leq\left(\sum_{k}\Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}}}^{2}\right)+D_{j}+2\sqrt{\sum_{k}\Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}}}^{2}}\sqrt{D_{j}} &  & \text{(Cauchy-Schwarz in \ensuremath{k}).}
\end{aligned}
\label{eq:dj}
\end{align}

\end_inset


\end_layout

\begin_layout Solution
Now,
 let us estimate the quantity 
\begin_inset Formula $A=\sum_{k}\Norm{\ket{\psi_{j}}-V_{k}\ket{\psi_{j}}}^{2}$
\end_inset

.
 We rewrite this as
\begin_inset Formula 
\[
A=\sum_{k}\bra{\psi_{j}}(I-V_{k})^{*}(I-V_{k})\ket{\psi_{j}}.
\]

\end_inset


\end_layout

\begin_layout Solution
To proceed,
 we observe the following property:
 If 
\begin_inset Formula $k$
\end_inset

,
 
\begin_inset Formula $k'$
\end_inset

 are distinct,
 then 
\begin_inset Formula $(I-V_{k'})^{*}(I-V_{k})=0$
\end_inset

.
 This is because,
 plugging in 
\begin_inset Formula $\ket{xy}$
\end_inset

 on the right and 
\begin_inset Formula $\bra{x'y'}$
\end_inset

 on the left,
 we get
\begin_inset Formula 
\[
\bra{x'y'}(I-V_{k'})^{*}(I-V_{k})\ket{xy}=(\bra{x'y'}-\bra{x'}\bra{y'}(U^{X_{x'}^{k'}})^{*})(\ket{xy}-\ket xU^{X_{x}^{k}}\ket y).
\]

\end_inset

Now,
 since this is an inner product between 
\begin_inset Formula $\ket{x'}\otimes\text{something}$
\end_inset

 and 
\begin_inset Formula $\ket x\otimes\text{something}$
\end_inset

,
 the only way this could be nonzero is if 
\begin_inset Formula $x=x'$
\end_inset

.
 In that case,
\begin_inset Formula 
\begin{align*}
\bra{x'y'}(I-V_{k'})^{*}(I-V_{k})\ket{xy} & =(\bra{y'}-\bra{y'}(U^{X_{x}^{k'}})^{*})(\ket y-U^{X_{x}^{k}}\ket y).
\end{align*}

\end_inset

Now,
 to finish off this part,
 note that,
 since the domains of 
\begin_inset Formula $X^{k'}$
\end_inset

 and 
\begin_inset Formula $X^{k}$
\end_inset

 are disjoint,
 
\emph on
at most one of
\emph default
 
\begin_inset Formula $X_{x}^{k'}$
\end_inset

 and 
\begin_inset Formula $X_{x}^{k}$
\end_inset

 are nonzero.
 Thus,
 either 
\begin_inset Formula $U^{X_{x}^{k'}}=I$
\end_inset

 or 
\begin_inset Formula $U^{X_{x}^{k}}=I$
\end_inset

.
 In the first case,
 the bra term is zero and the whole quantity dies.
 In the second case,
 the ket term is zero and the whole quantity dies.
 In summary,
 
\begin_inset Formula $\bra{x'y'}(I-V_{k'})^{*}(I-V_{k})\ket{xy}=0$
\end_inset

 for all 
\begin_inset Formula $x$
\end_inset

,
 
\begin_inset Formula $y$
\end_inset

,
 and so 
\begin_inset Formula $(I-V_{k'})^{*}(I-V_{k})=0$
\end_inset

 whenever 
\begin_inset Formula $k\neq k'$
\end_inset

.
\end_layout

\begin_layout Solution
Let's go back to our estimate of 
\begin_inset Formula $A$
\end_inset

.
 Our calculation just now gives us the property that
\begin_inset Formula 
\begin{align*}
A & =\sum_{k}\bra{\psi_{j}}(I-V_{k})^{*}(I-V_{k})\ket{\psi_{j}}\\
 & =\left(\sum_{k'}\bra{\psi_{j}}(I-V_{k'})^{*}\right)\left(\sum_{k}(I-V_{k})\ket{\psi_{j}}\right)\\
 & =\Norm{\sum_{k}(I-V_{k})\ket{\psi_{j}}}\\
 & \leq\Norm{\sum_{k}(I-V_{k})}^{2}\Norm{\ket{\psi_{j}}}^{2}=\Norm{\sum_{k}(I-V_{k})}^{2},
\end{align*}

\end_inset

where the norms in the last line are operator norms.
 Wow,
 we're still not done.
 Ok.
 Let's take a look at 
\begin_inset Formula $\sum_{k}I-V_{k}$
\end_inset

.
 Applying it to a basis vector,
 we get
\begin_inset Formula 
\[
\sum_{k}(I-V_{k})\ket{xy}=\ket x\otimes\sum_{k}(I-U^{X_{x}^{k}})\ket y,
\]

\end_inset

and the sum in the right-hand side is null 
\emph on
except
\emph default
 once,
 in which case it is 
\begin_inset Formula $I-U$
\end_inset

.
 This is because each value of 
\begin_inset Formula $x$
\end_inset

 is supported on exactly one 
\begin_inset Formula $X^{k}$
\end_inset

.
 Thus,
\end_layout

\begin_layout Solution
\begin_inset Formula 
\[
\sum_{k}(I-V_{k})\ket{xy}=\ket x\otimes(I-U)\ket y,
\]

\end_inset

and therefore 
\begin_inset Formula $\sum_{k}I-V_{k}=I\otimes(I-U)=I-I\otimes U$
\end_inset

 and so this is a difference of two unitary operators,
 each of which has operator norm 1,
 and so we (finally) conclude the estimate 
\begin_inset Formula $A\leq2^{2}=4$
\end_inset

.
 Thus,
 Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:dj"
plural "false"
caps "false"
noprefix "false"
nolink "false"

\end_inset

 becomes
\begin_inset Formula 
\[
D_{j+1}\leq4+D_{j}+4\sqrt{D_{j}}\ \left(=(\sqrt{D_{j}}+2)^{2}\right),
\]

\end_inset

and so by induction (and using 
\begin_inset Formula $D_{0}=0$
\end_inset

) we obtain the inequality 
\begin_inset Formula $D_{j}\leq4j^{2}$
\end_inset

,
 hence 
\begin_inset Formula $D_{n}\leq4n^{2}$
\end_inset

.
\end_layout

\begin_layout Solution
Now the argument proceeds as in the hybrid method as per usual.
 I will sketch the argument here.
 Let 
\begin_inset Formula $\lambda$
\end_inset

 be the smallest value of 
\begin_inset Formula $\Norm{\ket{\psi_{n}}-\ket{\psi_{n}^{k}}}^{2}$
\end_inset

,
 as 
\begin_inset Formula $k$
\end_inset

 ranges over 
\begin_inset Formula $0$
\end_inset

 to 
\begin_inset Formula $m-1$
\end_inset

.
 Then we have 
\begin_inset Formula $4n^{2}\geq m\lambda=\frac{N}{\ell}\lambda$
\end_inset

.
 On the other hand,
 any algorithm that solves this modified DJ problem will be able to reliably distinguish 
\begin_inset Formula $\ket{\psi_{n}}$
\end_inset

 and 
\begin_inset Formula $\ket{\psi_{n}^{k}}$
\end_inset

 for this value of 
\begin_inset Formula $k$
\end_inset

,
 and so the distance between these vectors has to be bounded from below by some uniform number,
 let's say 
\begin_inset Formula $c$
\end_inset

.
 Thus,
 
\begin_inset Formula $\lambda\geq c$
\end_inset

,
 and so
\begin_inset Formula 
\[
4n^{2}\geq cN/\ell,
\]

\end_inset

hence 
\begin_inset Formula $n\geq\Omega(\sqrt{N/\ell})$
\end_inset

,
 which is the desired lower bound.
\end_layout

\begin_layout Exercise
Let 
\begin_inset FormulaMacro
\newcommand{\MW}{\mathop{{\rm MW}}}
\end_inset


\begin_inset Formula $\MW(X)$
\end_inset

 be the characteristic function of the mid-Western strings.
 Compute its sensitivity and block-sensitivity up to a multiplicative constant.
\end_layout

\begin_layout Solution
First,
 let's do the block-sensitivity.
 It is obvious that it is bounded from above by 
\begin_inset Formula $N$
\end_inset

.
 We bound it from below by 
\begin_inset Formula $N/2$
\end_inset

:
 Simply consider 
\begin_inset Formula $X=0$
\end_inset

,
 which is obviously not mid-Western,
 and cover the domain with 
\begin_inset Formula $\left\lfloor N/2\right\rfloor $
\end_inset

 disjoint blocks containing two adjacent elements.
 Flipping any of these will create a mid-Western string.
 Thus:
\begin_inset Formula 
\[
\mathop{{\rm bs}}(\MW)=\Theta(N).
\]

\end_inset


\end_layout

\begin_layout Solution
Now,
 let's cover the sensitivity.
 First,
 we claim that it must be at least 
\begin_inset Formula $\sqrt{N}$
\end_inset

,
 by considering an input 
\begin_inset Formula $X$
\end_inset

 that is zero except at positions 
\begin_inset Formula $0$
\end_inset

,
 
\begin_inset Formula $\sqrt{N}$
\end_inset

,
 
\begin_inset Formula $2\sqrt{N}$
\end_inset

,
 and so on.
 (Round down if 
\begin_inset Formula $N$
\end_inset

 isn't a perfect square.) This is not mid-Western (at least assuming 
\begin_inset Formula $N>3$
\end_inset

),
 because it admits no adjacent ones.
 However,
 a flip at the positions 
\begin_inset Formula $1$
\end_inset

,
 
\begin_inset Formula $\sqrt{N}+1$
\end_inset

,
 
\begin_inset Formula $2\sqrt{N}+1$
\end_inset

,
 etc.
 will flip it into a mid-Western string,
 and so this input is 
\begin_inset Formula $\sqrt{N}$
\end_inset

-sensitive.
 This bounds the sensitivity from below.
\end_layout

\begin_layout Solution
Now let us bound the sensitivity from above.
 Let 
\begin_inset Formula $X$
\end_inset

 be an 
\begin_inset Formula $s$
\end_inset

-sensitive input.
 We cover two cases:
\end_layout

\begin_deeper
\begin_layout Itemize
If 
\begin_inset Formula $X$
\end_inset

 is not mid-Western,
 let's consider how many bits we could flip to make it mid-Western in the best case scenario.
 If 
\begin_inset Formula $i$
\end_inset

 is the position of such a bit (let's call these positions by the name 
\begin_inset Quotes eld
\end_inset

flipping positions
\begin_inset Quotes erd
\end_inset

),
 then by inspection we see that there can be at most one flipping position within a radius of 
\begin_inset Formula $\sqrt{N}$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
For a more rigorous argument,
 note that any flipping position has to be adjacent to a pre-existing 
\begin_inset Formula $1$
\end_inset

,
 and outside of one or two exceptions (depending on the value of 
\begin_inset Formula $X_{i}$
\end_inset

),
 everything in a radius of 
\begin_inset Formula $\sqrt{N}$
\end_inset

 (give or take,
 it's closer to something like 
\begin_inset Formula $\sqrt{N}-3$
\end_inset

) must be 
\begin_inset Formula $0$
\end_inset

.
 In this wasteland of zeros,
 there can be no more flipping bits,
 and in this 
\begin_inset Quotes eld
\end_inset

oasis
\begin_inset Quotes erd
\end_inset

 it's easy to see that there will always be exactly two flipping bits.
\end_layout

\begin_layout Standard
Thus,
 flipping positions come in pairs,
 and any two pair are at a distance of 
\begin_inset Formula $\approx\sqrt{N}$
\end_inset

 apart at least.
 This means that we can have at most 
\begin_inset Formula $\approx N/\sqrt{N}=\sqrt{N}$
\end_inset

 such flipping pairs over the length of the domain,
 
\begin_inset Formula $N$
\end_inset

,
 and so 
\begin_inset Formula $s\apprle2\sqrt{N}$
\end_inset

.
\begin_inset Foot
status open

\begin_layout Plain Layout
This argument was kind of handwavey and has a few off-by-ones,
 but I think it's clear that they don't matter in the end.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
If 
\begin_inset Formula $X$
\end_inset

 is mid-Western,
 let 
\begin_inset Formula $c$
\end_inset

 be a position witnessing to this fact.
 Then,
 any flipping bit 
\emph on
must
\emph default
 be within a distance of 
\begin_inset Formula $\sqrt{N}$
\end_inset

 of 
\begin_inset Formula $c$
\end_inset

,
 because any flip outside this range will not change the mid-Westernness of 
\begin_inset Formula $X$
\end_inset

.
 Thus,
 in this scenario,
 
\begin_inset Formula $s\apprle2\sqrt{N}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Solution
In either case,
 we got 
\begin_inset Formula $s\apprle2\sqrt{N}$
\end_inset

,
 and so we conclude
\begin_inset Formula 
\[
\mathop{{\rm s}}(\MW)=\Theta(\sqrt{N}).
\]

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset space \space{}
\end_inset


\begin_inset FormulaMacro
\newcommand{\apdeg}{\mathop{\widetilde{{\rm deg}}}}
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

label=(
\backslash
alph*)
\end_layout

\end_inset


\end_layout

\end_inset

Prove that any total function 
\begin_inset Formula $F(X)$
\end_inset

 with 
\begin_inset Formula $\apdeg(F)\leq1$
\end_inset

 depends on at most five variables.
\end_layout

\begin_layout Enumerate
Give an example of such a function.
\end_layout

\end_deeper
\begin_layout Solution
\begin_inset space \space{}
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

label=(
\backslash
alph*)
\end_layout

\end_inset


\end_layout

\end_inset

Let 
\begin_inset Formula $p(X)=A+\sum B_{i}X_{i}$
\end_inset

 be a degree 1 (or less) polynomial approximating 
\begin_inset Formula $F$
\end_inset

.
 I use the 
\begin_inset Formula $0$
\end_inset

-
\begin_inset Formula $1$
\end_inset

 convention here,
 not 
\begin_inset Formula $\pm1$
\end_inset

.
 However,
 I assume without loss of generality that 
\begin_inset Formula $F(0)=0$
\end_inset

.
 This implies that 
\begin_inset Formula $A$
\end_inset

 is between 
\begin_inset Formula $-1/3$
\end_inset

 and 
\begin_inset Formula $+1/3$
\end_inset

.
 Assume also that 
\begin_inset Formula $F$
\end_inset

 is 
\emph on
not
\emph default
 identically constant,
 as otherwise the result is trivial.
\end_layout

\begin_deeper
\begin_layout Standard
Let 
\begin_inset Formula $X_{i}$
\end_inset

 be a variable on which 
\begin_inset Formula $F$
\end_inset

 depends.
 This means that there is a pair of inputs 
\begin_inset Formula $X$
\end_inset

 and 
\begin_inset Formula $X'$
\end_inset

,
 differing only in the 
\begin_inset Formula $i$
\end_inset

-th place,
 for which the output of 
\begin_inset Formula $F$
\end_inset

 is different.
 Then,
 
\begin_inset Formula $\abs{B_{i}}\geq1/3$
\end_inset

 for such an index 
\begin_inset Formula $i$
\end_inset

,
 for the polynomial to close the gap between 
\begin_inset Formula $1/3$
\end_inset

 and 
\begin_inset Formula $2/3$
\end_inset

.
\end_layout

\begin_layout Standard
Now,
 let's suppose that there are 
\begin_inset Formula $p$
\end_inset

 positive such values of 
\begin_inset Formula $B_{i}$
\end_inset

,
 and 
\begin_inset Formula $n$
\end_inset

 negative such values.
 Then,
 by considering the value of 
\begin_inset Formula $p(x)$
\end_inset

 on appropriate inputs,
 we obtain the inequalities
\begin_inset Formula 
\[
A+\frac{1}{3}p\leq\frac{4}{3},\quad\text{and}\quad A-\frac{1}{3}n\geq-\frac{1}{3},
\]

\end_inset

and by taking the difference of these equations we get 
\begin_inset Formula $\frac{1}{3}(p+n)\leq\frac{5}{3}$
\end_inset

,
 or 
\begin_inset Formula $p+n\leq5$
\end_inset

.
 Since 
\begin_inset Formula $p+n$
\end_inset

 is an upper bound on the number of variables on which 
\begin_inset Formula $F$
\end_inset

 depends,
 the proof is complete.
\end_layout

\end_deeper
\begin_layout Enumerate
Let 
\begin_inset Formula $F(X_{1},\dots,X_{5})$
\end_inset

 be the 
\begin_inset Quotes eld
\end_inset

majority vote
\begin_inset Quotes erd
\end_inset

 function.
 (You can add extra dummy variables if you want more inputs.) Then,
 
\begin_inset Formula $F$
\end_inset

 obviously depends on all 
\begin_inset Formula $X_{i}$
\end_inset

,
 and has approximate degree 1 because it is approximated by the polynomial
\begin_inset Formula 
\[
p(X)=\frac{1}{3}(-1+X_{1}+\dots+X_{5}).
\]

\end_inset

This polynomial is built exactly to take only the values 
\begin_inset Formula $-\frac{1}{3},0,\frac{1}{3},\frac{2}{3},1$
\end_inset

,
 and 
\begin_inset Formula $\frac{4}{3}$
\end_inset

,
 based on the number of nonzero values of 
\begin_inset Formula $X_{i}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Solution
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Prove that
\begin_inset FormulaMacro
\newcommand{\CLIQUE}{{\rm CLIQUE}}
\end_inset


\begin_inset Formula 
\[
\Omega(N)\leq Q_{2}(\CLIQUE_{3,N})\leq O(N^{3/2}).
\]

\end_inset


\end_layout

\begin_layout Solution
For the upper bound,
 consider the following algorithm.
 Given a graph (represented by the data) 
\begin_inset Formula $X$
\end_inset

,
 define 
\begin_inset Formula $Y$
\end_inset

 as the function on 
\begin_inset Formula ${N \choose 3}\approx N^{3}$
\end_inset

 variables that,
 given a trio of vertices,
 checks whether they form a triangle in 
\begin_inset Formula $X$
\end_inset

.
 This requires 
\begin_inset Formula $3$
\end_inset

 calls to the oracle 
\begin_inset Formula $X$
\end_inset

.
 Next,
 use Grover's search algorithm (decision version) to see if 
\begin_inset Formula $Y$
\end_inset

 ever outputs 
\begin_inset Formula $1$
\end_inset

.
 This uses 
\begin_inset Formula $\sqrt{N^{3}}$
\end_inset

 calls to 
\begin_inset Formula $Y$
\end_inset

,
 approximately,
 and hence 
\begin_inset Formula $3\sqrt{N^{3}}$
\end_inset

calls to 
\begin_inset Formula $X$
\end_inset

,
 approximately.
 This furnishes the desired upper bound.
\end_layout

\begin_layout Solution
Next,
 for the lower bound,
 we also reduce the problem to Grover's search (decision version).
 Let 
\begin_inset Formula $X$
\end_inset

 be a string of size 
\begin_inset Formula ${N \choose 2}$
\end_inset

,
 let's say indexed in pairs 
\begin_inset Formula $(i,j)$
\end_inset

 with 
\begin_inset Formula $1\leq i<j\leq N$
\end_inset

,
 for which we want to decide whether it is identically zero or not.
 Define 
\begin_inset Formula $Y$
\end_inset

 as the adjacency matrix of the graph in 
\begin_inset Formula $N+1$
\end_inset

 vertices,
 which consists of the graph whose adjacency matrix is 
\begin_inset Formula $X$
\end_inset

,
 plus an extra vertex connected to everyone else.
 Note that calls to the oracle 
\begin_inset Formula $Y$
\end_inset

 require at most one call to the oracle 
\begin_inset Formula $X$
\end_inset

.
 Now,
 a triangle in 
\begin_inset Formula $Y$
\end_inset

 is exactly the same as a nonzero element in 
\begin_inset Formula $X$
\end_inset

,
 and so if we could solve 
\begin_inset Formula $\CLIQUE_{3,N}$
\end_inset

 in,
 say,
 
\begin_inset Formula $q$
\end_inset

 calls to the oracle,
 we could solve the search problem (of size 
\begin_inset Formula ${N \choose 2}=\Theta(N^{2})$
\end_inset

) in 
\begin_inset Formula $q$
\end_inset

 calls to the oracle,
 and by optimality of Grover's search we know that 
\begin_inset Formula $q\geq\Omega(\sqrt{N^{2}})=\Omega(N)$
\end_inset

.
 Thus,
 
\begin_inset Formula $Q_{2}(\CLIQUE_{3,N})\geq\Omega(N)$
\end_inset

,
 and the proof is complete.
\end_layout

\end_body
\end_document
