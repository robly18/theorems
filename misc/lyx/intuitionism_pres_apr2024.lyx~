#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass presentation_notes
\begin_preamble
\usepackage{amsmath}

\usepackage[cal=euler]{mathalpha}

\usepackage{enumitem}

\setlist[enumerate,1]{label=\alph*)}
\setlist[itemize,1]{label=$-$}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\begin_local_layout


Style Point
	Category              MainText
	Margin                Dynamic
	LatexType             Command
	LatexName             Point
	LabelType             Static
	LabelString		"•"
	LabelSep		55
	LabelIndent		MM

    
	TopSep                0.5
	BottomSep             0.5
	ItemSep               1
	Align                 Block
	AlignPossible         Block
	
    
    Preamble
    \newcommand\Point[1]{\noindent \hspace{\labelsep} {\large $\bullet$ #1} \smallskip}
    EndPreamble
End

Style point
	Category              MainText
	Margin                Dynamic
	LatexType             Command
	LatexName             point
	LabelType             Static
	LabelString		"◦"
	LabelSep		55
	LabelIndent		MM

    
	TopSep                0.5
	BottomSep             0.5
	ItemSep               1
	Align                 Block
	AlignPossible         Block
	
    
    
    Preamble
    \newcommand\point[1]{\noindent \hspace{\labelsep} {\small $\circ$ #1} \smallskip}
    EndPreamble
End
\end_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "lmodern" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
An Introduction to Intuitionistic Logic
\begin_inset Newline newline
\end_inset

MATH 306, Spring 2024
\end_layout

\begin_layout Author
Duarte Maia
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "macros.lyx"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Point
Intuitionism is usually presented as `like classical logic, but without
 excluded middle'.
 This has always struck me as an unhelpful description.
 Today, I will try to present intuitionism as it `clicked' for me, and we'll
 see where that takes us.
\end_layout

\begin_layout Section
The BHK Interpretation
\end_layout

\begin_layout Point
Let us consider the classical logical connectives 
\begin_inset Formula $\lor$
\end_inset

, 
\begin_inset Formula $\land,$
\end_inset


\begin_inset Formula $\rightarrow$
\end_inset

, and 
\begin_inset Formula $\neg$
\end_inset

.
 Classically, we interpret them in terms of absolute truth: We assume that
 any two statements 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 are 
\begin_inset Quotes eld
\end_inset

objectively true
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

objectively false
\begin_inset Quotes erd
\end_inset

, even if we don't know which is the case, and e.g.
 
\begin_inset Formula $A\lor B$
\end_inset

 takes an objective truth value of 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

 iff either 
\begin_inset Formula $A$
\end_inset

 or 
\begin_inset Formula $B$
\end_inset

 does.
\end_layout

\begin_layout Point
A way to understand intuitionism is to reinterpret them as talking about,
 not whether something is 
\begin_inset Quotes eld
\end_inset

objectively true or not
\begin_inset Quotes erd
\end_inset

, but rather in terms of what we, as humans and mathematicians, know.
 In this case, the statement 
\begin_inset Formula $A$
\end_inset

 means 
\begin_inset Quotes eld
\end_inset

I know that 
\begin_inset Formula $A$
\end_inset

 is true
\begin_inset Quotes erd
\end_inset

, and the statement 
\begin_inset Formula $A\lor B$
\end_inset

 means 
\begin_inset Quotes eld
\end_inset

I know that 
\begin_inset Formula $A$
\end_inset

 is true, or I know that 
\begin_inset Formula $B$
\end_inset

 is true
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Point
In particular, this means that to prove 
\begin_inset Formula $A\lor B$
\end_inset

 it is not sufficient to argue that they cannot be false at the same time;
 indeed, we cannot even refer to their 
\begin_inset Quotes eld
\end_inset

objective truth value
\begin_inset Quotes erd
\end_inset

.
 The only path left to us is to either prove 
\begin_inset Formula $A$
\end_inset

, or prove 
\begin_inset Formula $B$
\end_inset

.
\end_layout

\begin_layout Point
This explains why the principle of excluded middle is invalid in intuitionistic
 logic: To prove 
\begin_inset Formula $A\lor\neg A$
\end_inset

 for a given statement 
\begin_inset Formula $A$
\end_inset

, it is not sufficient to resort to its 
\begin_inset Quotes eld
\end_inset

objective truth value
\begin_inset Quotes erd
\end_inset

; we need to concretely prove or disprove 
\begin_inset Formula $A$
\end_inset

 in order to justify 
\begin_inset Formula $A\lor\neg A$
\end_inset

.
\end_layout

\begin_layout Point
We can refine this interpretation of logical connectives in order to get
 the following 
\begin_inset Quotes eld
\end_inset

definition of proof
\begin_inset Quotes erd
\end_inset

, due to Heyting.
 We define inductively on formula structure what consists of a proof of
 
\begin_inset Formula $\varphi$
\end_inset

:
\end_layout

\begin_layout Itemize
A proof of 
\begin_inset Formula $A\land B$
\end_inset

 is obtained by presenting a proof of 
\begin_inset Formula $A$
\end_inset

 and a proof of 
\begin_inset Formula $B$
\end_inset

,
\end_layout

\begin_layout Itemize
A proof of 
\begin_inset Formula $A\lor B$
\end_inset

 is obtained by presenting either a proof of 
\begin_inset Formula $A$
\end_inset

 or a proof of 
\begin_inset Formula $B$
\end_inset

,
\end_layout

\begin_layout Itemize
A proof of 
\begin_inset Formula $A\rightarrow B$
\end_inset

 is obtained by presenting a procedure which will turn a proof of 
\begin_inset Formula $A$
\end_inset

 into a proof of 
\begin_inset Formula $B$
\end_inset

,
\end_layout

\begin_layout Itemize
We stipulate that there is no proof of 
\begin_inset Formula $\bot$
\end_inset

, and define 
\begin_inset Formula $\neg A$
\end_inset

 as abbreviation for 
\begin_inset Formula $A\rightarrow\bot$
\end_inset

,
\end_layout

\begin_layout Itemize
A proof of 
\begin_inset Formula $\forall_{x}A(x)$
\end_inset

 is a construction which will, given 
\begin_inset Formula $x$
\end_inset

 in the domain of discourse, produce a proof of 
\begin_inset Formula $A(x)$
\end_inset

,
\end_layout

\begin_layout Itemize
A proof of 
\begin_inset Formula $\exists_{x}A(x)$
\end_inset

 consists of presenting an element 
\begin_inset Formula $x$
\end_inset

 in the domain of discourse, and a proof of 
\begin_inset Formula $A(x)$
\end_inset

.
\end_layout

\begin_layout Point
Here are a few examples of statements.
 We will prove those that we can, and we will later see that some of the
 remainder are not intuitionistically valid.
\end_layout

\begin_layout Itemize
\begin_inset Formula $A\rightarrow(A\lor B)$
\end_inset

, 
\begin_inset Formula $(A\land B)\rightarrow A$
\end_inset

, 
\begin_inset Formula $(A\lor\bot)\rightarrow A$
\end_inset

, all valid.
 In 
\begin_inset Formula $\lambda$
\end_inset

 notation, we may write proofs of these respectively as 
\begin_inset Formula $\lambda a.a$
\end_inset

, 
\begin_inset Formula $\lambda(a,b).a$
\end_inset

, and 
\begin_inset Formula $\lambda a.a$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $A\rightarrow\neg\neg A$
\end_inset

: To prove this we must, given a proof of 
\begin_inset Formula $A$
\end_inset

, construct a procedure which, given [a procedure to turn a proof of 
\begin_inset Formula $A$
\end_inset

 into a proof of 
\begin_inset Formula $\bot$
\end_inset

], will create a proof of 
\begin_inset Formula $\bot$
\end_inset

.
 To do this, we simply plug our original proof of 
\begin_inset Formula $A$
\end_inset

 into this procedure.
 Symbolically, we may write our proof of 
\begin_inset Formula $A\rightarrow\neg\neg A$
\end_inset

 as: 
\begin_inset Formula $\lambda a.(\lambda p.pa)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\neg\neg A\rightarrow A$
\end_inset

: In principle (and in practice) there is no reason for us to be able to
 prove this.
 We are given a machine which turns [machines which turn proofs of 
\begin_inset Formula $A$
\end_inset

 into proofs of 
\begin_inset Formula $\bot$
\end_inset

] into proofs of 
\begin_inset Formula $\bot$
\end_inset

.
 But not actually a proof of 
\begin_inset Formula $A$
\end_inset

.
 In other words, we now know that there cannot be a proof of 
\begin_inset Formula $\neg A$
\end_inset

, but that isn't a proof of 
\begin_inset Formula $A$
\end_inset

 by itself.
\end_layout

\begin_layout Itemize
\begin_inset Formula $(A\rightarrow B)\rightarrow((B\rightarrow C)\rightarrow(A\rightarrow C))$
\end_inset

: Composition of procedures.
 In other words, a proof of this is 
\begin_inset Formula $\lambda p.\lambda q.(q\circ p)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $(A\rightarrow B)\rightarrow(\neg B\rightarrow\neg A)$
\end_inset

: Apply the above for 
\begin_inset Formula $C=\bot$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $(\neg B\rightarrow\neg A)\rightarrow(A\rightarrow B)$
\end_inset

: We have a machine that turns proofs of 
\begin_inset Formula $\neg B$
\end_inset

 into proofs of 
\begin_inset Formula $\neg A$
\end_inset

, and we are given a proof of 
\begin_inset Formula $A$
\end_inset

.
 What do we do with that? The best we can do, at least at first sight, is:
 Put these ingredients together, as well as a proof of 
\begin_inset Formula $\neg B$
\end_inset

, to make a proof of 
\begin_inset Formula $\bot$
\end_inset

.
 So, the original implication doesn't seem true, but this one is: 
\begin_inset Formula $(\neg B\rightarrow\neg A)\rightarrow(A\rightarrow\neg\neg B)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $A\lor\neg A$
\end_inset

: As we've discussed, if 
\begin_inset Formula $A$
\end_inset

 is a mathematical statement which we do not know how to prove nor disprove,
 we cannot assert 
\begin_inset Formula $A\lor\neg A$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\neg(A\land\neg A)$
\end_inset

: Intuitionistically true, with proof 
\begin_inset Formula $\lambda(a,p).(pa)$
\end_inset

.
 Particular case of the more general 
\begin_inset Formula $(A\land(A\rightarrow B))\rightarrow B$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\neg\neg(A\lor\neg A)$
\end_inset

: Suppose we are given a proof of 
\begin_inset Formula $\neg(A\lor\neg A)$
\end_inset

.
 Can we construct a contradiction from it? (Not obvious! Give audience time
 to think.)
\begin_inset Newline newline
\end_inset

The answer turns out to be yes.
 Indeed, a proof of 
\begin_inset Formula $\neg(A\lor\neg A)$
\end_inset

 consists of a procedure which turns either a proof of 
\begin_inset Formula $A$
\end_inset

 or a proof of 
\begin_inset Formula $\neg A$
\end_inset

 into a contradiction.
 In particular, it can turn a proof of 
\begin_inset Formula $A$
\end_inset

 into a contradiction, so it provides a proof of 
\begin_inset Formula $\neg A$
\end_inset

.
 In turn, we can place this proof into the original procedure to obtain
 a proof of a contradiction.
 And thus, this entire process proves intuitionistically: 
\begin_inset Formula $\neg\neg(A\lor\neg A)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\neg\neg\neg A\rightarrow\neg A$
\end_inset

: Suppose we are given a proof of 
\begin_inset Formula $\neg\neg\neg A$
\end_inset

.
 Then, we can turn proofs of 
\begin_inset Formula $\neg\neg A$
\end_inset

 into proofs of 
\begin_inset Formula $\bot$
\end_inset

.
 But we've seen before that we can turn a proof of 
\begin_inset Formula $A$
\end_inset

 into a proof of 
\begin_inset Formula $\neg\neg A$
\end_inset

, and composing these procedures we get the desired result.
\end_layout

\begin_layout Section
Rules of Deduction and Deduction Metatheorem
\end_layout

\begin_layout Point
Let us now present a Hilbert-style calculus.
 It looks a lot like the one for first-order logic, but we have more specific
 axioms.
\end_layout

\begin_layout point
Note: Unlike in classical logic, we cannot cheap out by picking a small
 set of connectives, e.g.
 
\begin_inset Formula $\rightarrow$
\end_inset

 and 
\begin_inset Formula $\neg$
\end_inset

, and writing the rest in terms of those.
\end_layout

\begin_layout Point
Note to self: When introducing the axioms, discuss and name the functions
 they correspond to!
\end_layout

\begin_layout Point
The axioms are:
\end_layout

\begin_layout Itemize
\begin_inset Formula $(A\land B)\rightarrow A$
\end_inset

, 
\begin_inset Formula $(A\land B)\rightarrow B$
\end_inset

, 
\begin_inset Formula $A\rightarrow(B\rightarrow(A\land B))$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $A\rightarrow(A\lor B)$
\end_inset

, 
\begin_inset Formula $B\rightarrow(A\lor B)$
\end_inset

, 
\begin_inset Formula $((A\rightarrow C)\land(B\rightarrow C))\rightarrow(A\lor B\rightarrow C)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $(A\rightarrow B)\rightarrow((B\rightarrow C)\rightarrow(A\rightarrow C))$
\end_inset

, 
\begin_inset Formula $A\rightarrow(B\rightarrow A)$
\end_inset

,
\begin_inset Formula $A\rightarrow A$
\end_inset

,
\begin_inset Formula $(A\rightarrow(B\rightarrow C))\rightarrow((A\rightarrow B)\rightarrow(A\rightarrow C))$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\bot\rightarrow A$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $A(t)\rightarrow\exists_{x}A(x)$
\end_inset

 if admissible substitution; 
\begin_inset Formula $\exists_{x}A(x)\rightarrow(\forall_{x}(A(x)\rightarrow B)\rightarrow B)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall_{x}A(x)\rightarrow A(t)$
\end_inset

 if admissible substitution; 
\begin_inset Formula $\forall_{x}(A\rightarrow B(x))\rightarrow(A\rightarrow\forall_{x}B(x))$
\end_inset

.
\end_layout

\begin_layout point
Note: The first and third implication axioms are actually redundant! We'll
 prove this later.
\end_layout

\begin_layout Point
We also have, as rules of inference, modus ponens and generalization.
\end_layout

\begin_layout Point
For now, we'll restrict ourselves to the propositional segment.
\end_layout

\begin_layout Point
We'll prove some of the statements we discussed previously, but first a
 very useful fact:
\end_layout

\begin_layout Point
Deduction Metatheorem for Propositional Intuitionistic Logic: If 
\begin_inset Formula $\Gamma,A\vdash B$
\end_inset

 then 
\begin_inset Formula $\Gamma\vdash A\rightarrow B$
\end_inset

.
\end_layout

\begin_layout point
Proof: Induct on proof structure to turn a proof of 
\begin_inset Formula $B$
\end_inset

 into one of 
\begin_inset Formula $A\rightarrow B$
\end_inset

.
\begin_inset Newline newline
\end_inset

Steps where an axiom 
\begin_inset Formula $\alpha$
\end_inset

 is invoked are replaced by: 
\begin_inset Formula $\alpha\rightarrow(A\rightarrow\alpha);\alpha;\text{\text{(MP)}}$
\end_inset

, hypothesis steps are replaced by 
\begin_inset Formula $A\rightarrow A$
\end_inset

, and steps where Modus Ponens (with 
\begin_inset Formula $\alpha\rightarrow\beta$
\end_inset

 and 
\begin_inset Formula $\alpha$
\end_inset

) is invoked are replaced by: 
\begin_inset Formula $(A\rightarrow(\alpha\rightarrow\beta))\rightarrow((A\rightarrow\alpha)\rightarrow(A\rightarrow\beta))$
\end_inset

 followed by two applications of MP.
 So really, it's these two axioms doing the heavy lifting.
 
\begin_inset space \hfill{}
\end_inset


\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Point
Can now prove the statements we proved earlier without much trouble.
 As an example, let's prove 
\begin_inset Formula $\vdash A\rightarrow\neg\neg A$
\end_inset

: Start with the obvious 
\begin_inset Formula $A,\neg A\vdash\bot$
\end_inset

.
 Apply deduction twice.
\end_layout

\begin_layout point
Another example: Evidently, 
\begin_inset Formula $(\neg B\rightarrow\neg A),A,\neg B\vdash\bot$
\end_inset

.
 Apply deduction to get: 
\begin_inset Formula $\vdash(\neg B\rightarrow\neg A)\rightarrow(A\rightarrow\neg\neg B)$
\end_inset

.
\end_layout

\begin_layout Point
(Ask the audience? I feel confident that I could do any of them now.)
\end_layout

\begin_layout Section
Lambda Calculus Detour
\end_layout

\begin_layout Point
Introduce lambda notation, just in case.
 A lambda expression is something that looks like 
\begin_inset Formula $f=\lambda x.(\mathrm{expr})$
\end_inset

, where 
\begin_inset Formula $\mathrm{expr}$
\end_inset

 is itself a lambda expression.
 Moreover, given two lambda expressions 
\begin_inset Formula $f$
\end_inset

 and 
\begin_inset Formula $g$
\end_inset

, we write 
\begin_inset Formula $fg$
\end_inset

 to mean 
\begin_inset Formula $\mathrm{expr}$
\end_inset

when 
\begin_inset Formula $x$
\end_inset

 is replaced by 
\begin_inset Formula $g$
\end_inset

.
 This has some fancy name: 
\begin_inset Formula $\beta$
\end_inset

 reduction.
 We will work with 
\emph on
typed
\emph default
 lambda calculus, where (for our purposes) each expression represents a
 proof of a proposition, and you can only evaluate expressions of appropriate
 type.
\end_layout

\begin_layout Point
We can think of the axioms of intuitionism as a base set of lambda expressions
 of certain types, and a proof of 
\begin_inset Formula $\vdash A$
\end_inset

 consists of constructing a lambda expression, starting from those, of type
 
\begin_inset Formula $A$
\end_inset

.
 More precisely, a proof can be seen as writing a program where invocations
 of axioms consist of writing down one of these basic lambda expressions
 and Modus Ponens consists of applying functions to objects.
\end_layout

\begin_layout point
Example: Consider the following proof of 
\begin_inset Formula $\vdash A\rightarrow(A\land A)$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
A\rightarrow(A\rightarrow(A\land A)) &  &  & \mathrm{Ax} &  & p\\{}
[A\rightarrow(A\rightarrow A\land A)]\rightarrow[(A\rightarrow A)\rightarrow(A\rightarrow A\land A)] &  &  & \mathrm{Ax} &  & r\\
(A\rightarrow A)\rightarrow(A\rightarrow A\land A) &  &  & \mathrm{MP} &  & rp\\
A\rightarrow A &  &  & \mathrm{Ax} &  & e\\
A\rightarrow(A\land A) &  &  & \mathrm{MP} &  & rpe
\end{align*}

\end_inset


\end_layout

\begin_layout point
If you unroll the definition of 
\begin_inset Formula $rpe$
\end_inset

, you'll find we just created the function 
\begin_inset Formula $\lambda x.pxx$
\end_inset

, or 
\begin_inset Formula $\lambda x.(x,x)$
\end_inset

.
\end_layout

\begin_layout Point
If you have assumptions, this corresponds to creating a lambda expression
 with arguments.
\end_layout

\begin_layout point
Example: Consider the following proof of 
\begin_inset Formula $A\land B\vdash B\land A$
\end_inset

.
 We use 
\begin_inset Formula $x$
\end_inset

 to mean some previously fixed proof of 
\begin_inset Formula $A\land B$
\end_inset

:
\begin_inset Formula 
\begin{align*}
A\land B &  &  & \mathrm{Hyp} &  & x\\
A\land B\rightarrow A &  &  & \mathrm{Ax} &  & \pi_{1}\\
A &  &  & \mathrm{MP} &  & \pi_{1}x\\
A\land B\rightarrow B &  &  & \mathrm{Ax} &  & \pi_{2}\\
B &  &  & \mathrm{MP} &  & \pi_{2}x\\
B\rightarrow(A\rightarrow B\land A) &  &  & \mathrm{Ax} &  & p\\
A\rightarrow B\land A &  &  & \mathrm{MP} &  & p(\pi_{2}x)\\
B\land A &  &  & \mathrm{MP} &  & p(\pi_{2}x)(\pi_{1}x)
\end{align*}

\end_inset


\end_layout

\begin_layout point
We may see this proof, then, as the function 
\begin_inset Formula $\mathit{swp}=\lambda x.p(\pi_{2}x)(\pi_{1}x)$
\end_inset

, which obviously swaps the two elements of a pair.
 Thus if our original 
\begin_inset Formula $x$
\end_inset

 was a pair 
\begin_inset Formula $(\text{proof of \ensuremath{A}, \text{proof of \ensuremath{B}})}$
\end_inset

 (for a proof of 
\begin_inset Formula $A\land B$
\end_inset

), applying this function to it will create a proof of 
\begin_inset Formula $B\land A$
\end_inset

.
 So in some sense, we have actually intuitionistically just proven 
\begin_inset Formula $\vdash(A\land B)\rightarrow(B\land A)$
\end_inset

.
\end_layout

\begin_layout Point
Here's the first punchline: We can use proofs with hypotheses to write lambda
 expressions 
\begin_inset Quotes eld
\end_inset

explicitly
\begin_inset Quotes erd
\end_inset

, with arguments.
 Then, if we apply the deduction theorem, we obtain a proof with no assumptions
 of the implication at hand.
 This will be a lambda expression which does the same as the original, but
 is written completely implicitly!
\end_layout

\begin_layout Point
As an example, if we apply the deduction theorem to that last proof of 
\begin_inset Formula $A\land B\vdash B\land A$
\end_inset

 to get a proof of 
\begin_inset Formula $A\land B\rightarrow B\land A$
\end_inset

, we obtain the following alternative expression for 
\begin_inset Formula $\textit{swp}$
\end_inset

:
\begin_inset Formula 
\[
\mathit{swp}=r(rp(r(c\pi_{2})e))(r(c\pi_{1})e).
\]

\end_inset


\end_layout

\begin_layout Point
Here's the second punchline: Lambda expressions don't need to be working
 with proofs of stuff.
 We can write a lambda expression to be a function that does something in
 some other context; for example, we can be considering some complicated
 expression like 
\begin_inset Formula $D=\lambda f.\lambda x.(f(x+1)-fx)$
\end_inset

, which represents some computable operation, in this case a discrete derivative
 which may be used in a program to numerically solve PDEs.
 In turn, we may temporarily forget the meaning of 
\begin_inset Formula $D$
\end_inset

, and look at it as a proof of 
\begin_inset Formula $(Z\rightarrow Z)\rightarrow(Z\rightarrow Z)$
\end_inset

.
 (In it, we need to use 
\begin_inset Formula $+$
\end_inset

 and 
\begin_inset Formula $-$
\end_inset

 as primitive 
\begin_inset Quotes eld
\end_inset

proofs
\begin_inset Quotes erd
\end_inset

 of 
\begin_inset Formula $Z\rightarrow(Z\rightarrow Z)$
\end_inset

 and 
\begin_inset Formula $1$
\end_inset

 as a 
\begin_inset Quotes eld
\end_inset

proof
\begin_inset Quotes erd
\end_inset

 of 
\begin_inset Formula $Z$
\end_inset

.
 Then, we write it in a Hilbert style calculus as above, and apply the deduction
 metatheorem, to obtain at the end an 
\begin_inset Quotes eld
\end_inset

application point free
\begin_inset Quotes erd
\end_inset

 expression for 
\begin_inset Formula $D$
\end_inset

! It would be enormous, so I didn't bother to compute it, but here is half
 of the work:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
Df & =\lambda x.(-(f(+x1))(fx))\\
 & =r(r(c-)(r(cf)(r(r(c+)e)(c1))))(r(cf)e)\\
\text{(clear some redundancies)} & =r(r(c-)(r(cf)(+1)))f\\
\text{(allow composition)} & =r(-\circ(f\circ(+1)))f.
\end{align*}

\end_inset


\end_layout

\begin_layout Point
In the programming language Haskell, this is referred to as 
\begin_inset Quotes eld
\end_inset

point-free
\begin_inset Quotes erd
\end_inset

 programming, and I was aware that there was a theorem that says that any
 function can be put into point-free style.
 But I never thought that intuitionism would help me figure out how one
 might prove that!
\end_layout

\begin_layout Point
Hopefully, you'll believe that I've sketched a correspondence between intuitioni
stic proofs and lambda expressions of some kind.
 As it turns out, lambda expressions are deeply related to computability
 (one of the first few models of computability, due to Church, being based
 on them), so this all leads to something called the Curry-Howard isomorphism.
 Also, in some sense it justifies the BHK interpretation.
\end_layout

\begin_layout Section
Kripke Semantics and Non-Provability
\end_layout

\begin_layout Point
Now that we can prove a bunch of stuff, let's turn to proving that things
 aren't provable.
 Again, we'll restrict ourselves to the propositional case for simplicity.
\end_layout

\begin_layout Point
An obvious remark is that classical soundness still holds: If 
\begin_inset Formula $\Gamma\vdash_{i}\varphi$
\end_inset

 then for every model/truth assignment of the variables, say 
\begin_inset Formula $M$
\end_inset

, if 
\begin_inset Formula $M\vDash\Gamma$
\end_inset

 then 
\begin_inset Formula $M\vDash\varphi$
\end_inset

.
 But this will not help us find any classically-provable-but-intuitionistically-
unprovable statements.
\end_layout

\begin_layout Point
The issue is that classical models 
\begin_inset Quotes eld
\end_inset

subscribe
\begin_inset Quotes erd
\end_inset

 to the idea of objective truth, which is intuitionistically not necessary,
 so we need to change paradigm to a notion of model in which truth is 
\begin_inset Quotes eld
\end_inset

more fluid
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Point
As such, we will instead consider a type of 
\begin_inset Quotes eld
\end_inset

model
\begin_inset Quotes erd
\end_inset

 in which there is a 
\begin_inset Quotes eld
\end_inset

nonlinear time variable
\begin_inset Quotes erd
\end_inset

 in the background, which represents future possibilities.
 This is represented by a poset 
\begin_inset Formula $(K,\leq)$
\end_inset

.
 At any instant in time, any propositional statement may or may not have
 been verified.
 Once a statement 
\begin_inset Formula $A$
\end_inset

 has been seen to be true, it will always be true.
 Formally, for each propositional letter 
\begin_inset Formula $A$
\end_inset

 we assign a (possibly empty) upper-closed subset of 
\begin_inset Formula $K$
\end_inset

, interpreted as the circumstances in which 
\begin_inset Formula $A$
\end_inset

 has been seen to be true.
 This formalism is slightly asymmetric in its notion of truth; there is
 no notion of a node in which we have 
\begin_inset Quotes eld
\end_inset

ensured that 
\begin_inset Formula $A$
\end_inset

 is false
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Point
A node 
\begin_inset Formula $k\in K$
\end_inset

 where 
\begin_inset Formula $A$
\end_inset

 has been verified true is said to 
\emph on
force
\emph default
 
\begin_inset Formula $A$
\end_inset

, denoted 
\begin_inset Formula $k\Vdash A$
\end_inset

.
\end_layout

\begin_layout Point
The triple 
\begin_inset Formula $(K,\leq,\Vdash)$
\end_inset

 is called a 
\emph on
Kripke model
\emph default
, and is denoted 
\begin_inset Formula $\mathcal{K}$
\end_inset

.
\end_layout

\begin_layout Point
Given such a relation, it is extended from propositional letters to formulas
 by:
\end_layout

\begin_layout Itemize
\begin_inset Formula $k\Vdash\alpha\land\beta$
\end_inset

 if 
\begin_inset Formula $k$
\end_inset

 forces both,
\end_layout

\begin_layout Itemize
\begin_inset Formula $k\Vdash\alpha\lor\beta$
\end_inset

 if 
\begin_inset Formula $k$
\end_inset

 forces one of them,
\end_layout

\begin_layout Itemize
\begin_inset Formula $k\nVdash\bot$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $k\Vdash\alpha\rightarrow\beta$
\end_inset

 if 
\begin_inset Quotes eld
\end_inset

in every possible future where 
\begin_inset Formula $\alpha$
\end_inset

 holds, 
\begin_inset Formula $\beta$
\end_inset

 also holds
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout point
This definition may remind you of forcing in other contexts.
 It reminded me of set-theoretic forcing.
 Unfortunately, I don't know enough to draw parallels or conclusions from
 this.
\end_layout

\begin_layout Point
As a consequence of this definition, we may read off what it means for 
\begin_inset Formula $k$
\end_inset

 to force 
\begin_inset Formula $\neg A$
\end_inset

: It means that, in our circumstances, we are guaranteed that 
\begin_inset Formula $A$
\end_inset

 will never hold in the future.
 Conversely, 
\begin_inset Formula $\neg\neg A$
\end_inset

 means that there is no future where 
\begin_inset Formula $A$
\end_inset

 is implausible.
\end_layout

\begin_layout Point
In order to apply this notion of model to intuitionistic logic, we need
 a soundness result:
\end_layout

\begin_layout Point
Define 
\begin_inset Formula $\mathcal{K}\Vdash\varphi$
\end_inset

 if, for every 
\begin_inset Formula $k\in K$
\end_inset

, we have 
\begin_inset Formula $k\Vdash\varphi$
\end_inset

.
 Define 
\begin_inset Formula $\mathcal{K}\Vdash\Gamma$
\end_inset

 in the obvious way, and set 
\begin_inset Formula $\Gamma\vDash_{i}\varphi$
\end_inset

 if, for every Kripke model 
\begin_inset Formula $\mathcal{K}\Vdash\Gamma$
\end_inset

, we have 
\begin_inset Formula $\mathcal{K}\Vdash\varphi$
\end_inset

.
\end_layout

\begin_layout Point
Theorem: If 
\begin_inset Formula $\Gamma\vdash_{i}\varphi$
\end_inset

 then 
\begin_inset Formula $\Gamma\vDash_{i}\varphi$
\end_inset

.
\end_layout

\begin_layout point
Proof: Induct on proof structure.
 First, we need verify that every axiom is satisfied by every Kripke model.
 This takes some work; let's just verify one of them.
\begin_inset Newline newline
\end_inset

(Trust that you can do it on the spot?)
\begin_inset Newline newline
\end_inset

Next, we just need to verify that rules of deduction are preserved, in our
 case just MP.
 So, let 
\begin_inset Formula $\mathcal{K}$
\end_inset

 be a Kripke model whose every element forces 
\begin_inset Formula $\alpha\rightarrow\beta$
\end_inset

 and 
\begin_inset Formula $\alpha$
\end_inset

.
 Then...
 Obviously any element forces 
\begin_inset Formula $\beta$
\end_inset

.
 And we're done.
 
\begin_inset space \hfill{}
\end_inset


\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Point
We can now prove unprovability of some statements, by finding Kripke models
 which do not force them.
\end_layout

\begin_layout Point
Theorem: 
\begin_inset Formula $\nvdash_{i}A\lor\neg A$
\end_inset

, 
\begin_inset Formula $\nvdash_{i}(\neg B\rightarrow\neg A)\rightarrow(A\rightarrow B)$
\end_inset

.
\end_layout

\begin_layout point
Proof: See handdrawn figures 1 and 2.
\end_layout

\begin_layout Point
It happens to be the case that Kripke semantics are complete, both in the
 propositional and first-order case.
\end_layout

\begin_layout Point
Theorem: If 
\begin_inset Formula $\Gamma\nvdash_{i}\varphi$
\end_inset

 then there is a Kripke model 
\begin_inset Formula $\mathcal{K}$
\end_inset

whose every element forces every formula in 
\begin_inset Formula $\Gamma$
\end_inset

 but which contains an element which does not force 
\begin_inset Formula $\varphi$
\end_inset

.
\end_layout

\begin_layout point
Remark: In fact, 
\begin_inset Formula $\mathcal{K}$
\end_inset

may be chosen as to make 
\begin_inset Formula $K$
\end_inset

 finite, and moreover we may choose 
\begin_inset Formula $K$
\end_inset

 to be a finite tree.
\end_layout

\begin_layout Section
Equiconsistency
\end_layout

\begin_layout Point
Let us draw a parallel between intuitionistic/classical logic and 
\begin_inset Formula $\mathrm{ZF}$
\end_inset

/
\begin_inset Formula $\mathrm{ZFC}$
\end_inset

.
 In both cases, we have a pair of systems of which one is strictly stronger
 than the other, the latter system being used by the majority of working
 mathematicians and the former being seen as (varying levels of) niche.
 However, in the case of 
\begin_inset Formula $\mathrm{ZF}$
\end_inset

and 
\begin_inset Formula $\mathrm{ZFC}$
\end_inset

, we have results due to Gödel and Cohen that they are both equally consistent,
 which has the following philosophical consequence: A mathematician cannot
 at the same time accept 
\begin_inset Formula $\mathrm{ZF}$
\end_inset

and reject 
\begin_inset Formula $\mathrm{ZFC}$
\end_inset

 on the grounds of consistency.
 As it turns out, something similar holds for intuitionistic and classical
 logic: If classical logic were to be inconsistent, so would intuitionistic
 logic.
\end_layout

\begin_layout Point
The idea is that, in some sense, classical logic 
\begin_inset Quotes eld
\end_inset

embeds into
\begin_inset Quotes erd
\end_inset

 intuitionistic logic.
 For example, even though intuitionistically it is not the case that 
\begin_inset Formula $A\lor\neg A$
\end_inset

, we do have 
\begin_inset Formula $\neg\neg(A\lor\neg A)$
\end_inset

.
 This suggests that by adding enough double-negations into a classically
 true formula 
\begin_inset Formula $\varphi$
\end_inset

, we may get a classically equivalent formula 
\begin_inset Formula $\varphi^{g}$
\end_inset

 which is intuitionistically true, even if the original 
\begin_inset Formula $\varphi$
\end_inset

 is not.
\end_layout

\begin_layout Point
We inductively define 
\emph on
a slightly modified version of
\emph default
 the so-called Gödel-Gentzen negative translation 
\begin_inset Formula $\varphi\mapsto\varphi^{g}$
\end_inset

 for propositional formulas:
\end_layout

\begin_layout Itemize
\begin_inset Formula $A^{g}:=\neg\neg A$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $\bot^{g}:=\bot$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $(A\land B)^{g}:=A^{g}\land B^{g}$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $(A\lor B)^{g}:=\neg\neg(A^{g}\lor B^{g})$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $(A\rightarrow B)^{g}:=A^{g}\rightarrow B^{g}$
\end_inset

.
\end_layout

\begin_layout point
Remark: The modification on `or' is to make 
\begin_inset Formula $A\lor\neg A$
\end_inset

 turn into a true statement.
 The modification on atomic statements I don't have a direct justification
 for, but it should help make things like 
\begin_inset Formula $(\neg B\rightarrow\neg A)\rightarrow(A\rightarrow B)$
\end_inset

 become true.
 For a simpler example, perhaps 
\begin_inset Formula $\neg(A\rightarrow B)\rightarrow A$
\end_inset

.
\end_layout

\begin_layout Point
Theorem: 
\begin_inset Formula $\vdash_{c}A\leftrightarrow A^{g}$
\end_inset

, and if 
\begin_inset Formula $\vdash_{c}A$
\end_inset

 then 
\begin_inset Formula $\vdash_{i}A^{g}$
\end_inset

.
\end_layout

\begin_layout point
Proof: The proof of the first equivalence is an easy induction on formula
 structure.
\begin_inset Newline newline
\end_inset

For the second part, we induct on proof structure.
 Since this translation acts seamlessly on implications, the MP steps are
 no issues.
 The main difficulty would be showing, for every classical axiom 
\begin_inset Formula $\alpha$
\end_inset

, that 
\begin_inset Formula $\alpha^{g}$
\end_inset

is intuitionistically true.
\begin_inset Newline newline
\end_inset

This turns out not to be too difficult.
 The classical axioms are just the intuitionistic ones plus, say, 
\begin_inset Formula $A\lor\neg A$
\end_inset

, which we've seen is transformed into an intuitionistically true formula.
 Most of the others are transformed in a structural way that doesn't change
 their shape, so there are only three possibly-troublesome axioms: 
\begin_inset Formula $A\rightarrow(A\lor B)$
\end_inset

, 
\begin_inset Formula $B\rightarrow(A\lor B)$
\end_inset

, and 
\begin_inset Formula $(A\rightarrow C)\rightarrow((B\rightarrow C)\rightarrow(A\lor B\rightarrow C))$
\end_inset

.
 The first two aren't much trouble because 
\begin_inset Formula $A^{g}\lor B^{g}\rightarrow\neg\neg(A^{g}\lor B^{g})\equiv(A\lor B)^{g}$
\end_inset

.
 So we really only need to look at
\begin_inset Newline newline
\end_inset


\begin_inset Formula 
\[
(A^{g}\rightarrow C^{g})\rightarrow((B^{g}\rightarrow C^{g})\rightarrow(\neg\neg(A^{g}\lor B^{g})\rightarrow C^{g})).
\]

\end_inset

This is 
\emph on
not
\emph default
 an intuitionistic axiom, so we have to work a little harder to verify it.
 First, we need to prove, by induction on formula structure, the following
 lemma: 
\begin_inset Formula $\vdash_{i}\neg\neg C^{g}\rightarrow C^{g}$
\end_inset

.
 Then, we use 
\begin_inset Formula $(A^{g}\rightarrow C^{g})\rightarrow((B^{g}\rightarrow C^{g})\rightarrow(A^{g}\lor B^{g}\rightarrow C^{g}))$
\end_inset

, followed by 
\begin_inset Formula $(X\rightarrow Y)\rightarrow(\neg\neg X\rightarrow\neg\neg Y)$
\end_inset

 and 
\begin_inset Formula $\neg\neg C^{g}\rightarrow C^{g}$
\end_inset

.
\begin_inset space \hfill{}
\end_inset


\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Point
Corollary: If 
\begin_inset Formula $\vdash_{c}\bot$
\end_inset

 then 
\begin_inset Formula $\vdash_{i}\bot$
\end_inset

.
\end_layout

\begin_layout Point
Remark: All of the above works for FOL.
\end_layout

\begin_layout Point
This does not, in principle, mean that a set of formulas is classically
 consistent iff it is intuitionistically consistent.
 However, to give a counterexample, we have to move to first order logic,
 because for intuitionistic propositional logic we have the following theorem
 due to Gilvenko, which provides a much simpler translation:
\end_layout

\begin_layout Point
Theorem: 
\begin_inset Formula $\vdash_{c}\alpha$
\end_inset

 iff 
\begin_inset Formula $\vdash_{i}\neg\neg\alpha$
\end_inset

.
\end_layout

\begin_layout Point
Corollary: A set of propositional formulas 
\begin_inset Formula $\Gamma$
\end_inset

 is classically inconsistent iff it is intuitionistically inconsistent.
\end_layout

\begin_layout point
Proof: If 
\begin_inset Formula $\Gamma\vdash_{c}\bot$
\end_inset

 then 
\begin_inset Formula $\vdash_{c}\land\gamma_{i}\rightarrow\bot$
\end_inset

, hence 
\begin_inset Formula $\vdash_{i}\neg\neg\neg(\land\gamma_{i})$
\end_inset

 hence 
\begin_inset Formula $\vdash_{i}\neg(\land\gamma_{i})$
\end_inset

 and so 
\begin_inset Formula $\Gamma\vdash_{i}\bot$
\end_inset

.
\begin_inset space \hfill{}
\end_inset


\begin_inset Formula $\square$
\end_inset


\end_layout

\begin_layout Point
However, this double-translation does not generally work in first-order
 logic.
 Indeed, here is an example of a classically-inconsistent-but-intuitionistically
-consistent (singleton) set of formulas: 
\begin_inset Formula $\Gamma=\{\neg(\forall_{x}\neg\neg A(x)\rightarrow\neg\neg\forall_{x}A(x))\}$
\end_inset

.
 (Source: Exercise 2.5.2 in page 107 of Troelstra vol 1.) As a consequence,
 one may still object to a 
\emph on
particular set of axioms
\emph default
 being possibly (and truthfully) classically inconsistent while intuitionistical
ly consistent.
 If there is time we will see an example.
\end_layout

\begin_layout Section
Heyting Arithmetic
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\PA}{\mathrm{PA}}
\end_inset


\begin_inset FormulaMacro
\newcommand{\HA}{\mathrm{HA}}
\end_inset


\end_layout

\begin_layout Point
Heyting Arithmetic consists of the standard axioms for 
\begin_inset Formula $\PA$
\end_inset

, but in intuitionistic logic.
 Troelstra adds symbols for the PR functions, but Avigad does not.
\end_layout

\begin_layout Point
As it turns out, there is a lot that goes directly from 
\begin_inset Formula $\PA$
\end_inset

 to 
\begin_inset Formula $\HA$
\end_inset

:
\end_layout

\begin_layout Point
Theorem: There is a slightly modified version of the Gödel-Gentzen translation
 which satisfies: 
\begin_inset Formula $\PA\vdash A$
\end_inset

 iff 
\begin_inset Formula $\HA\vdash A^{g}$
\end_inset

.
\end_layout

\begin_layout Point
Corollary: If 
\begin_inset Formula $\PA$
\end_inset

were inconsistent, so would 
\begin_inset Formula $\HA$
\end_inset

.
\end_layout

\begin_layout Point
It can also be shown with this same translation and some technical work
 that, for any 
\begin_inset Formula $\Pi_{2}$
\end_inset

sentence 
\begin_inset Formula $A$
\end_inset

, 
\begin_inset Formula $\PA\vdash A$
\end_inset

 iff 
\begin_inset Formula $\HA\vdash A$
\end_inset

.
 
\end_layout

\begin_layout Point
A lot more ink has been spilled on 
\begin_inset Formula $\HA$
\end_inset

, regarding the limits of what propositions and types of reasoning can be
 transferred from 
\begin_inset Formula $\PA$
\end_inset

 to 
\begin_inset Formula $\HA$
\end_inset

.
 It is not complete, but it is more than you may expect, exploition regularities
 in the axioms and encodings of things into arithmetic and PR functions.
 Here is another example of a principle which is not generally intuitionisticall
y valid, but holds in 
\begin_inset Formula $\HA$
\end_inset

: Markov's principle for PR functions,
\begin_inset Formula 
\[
\text{If }\HA\vdash\neg\neg\exists_{x}P(x)\text{ then }\HA\vdash\exists_{x}P(x),\text{ for \ensuremath{P} primitive recursive.}
\]

\end_inset

In fact, the assumption that 
\begin_inset Formula $P$
\end_inset

 is primitive recursive may be replaced by the weaker assumption:
\begin_inset Formula $\HA\vdash\forall_{x}(P(x)\lor\neg P(x))$
\end_inset

.
\end_layout

\begin_layout Point
Let us now pivot to an example where 
\begin_inset Formula $\HA$
\end_inset

 differs strongly from 
\begin_inset Formula $\PA$
\end_inset

: There are extra axioms we can add to 
\begin_inset Formula $\HA$
\end_inset

 (consistently), which directly contradict 
\begin_inset Formula $\PA$
\end_inset

.
 An example of this is Church's Thesis.
\end_layout

\begin_layout Point
Classically, it is possible to prove that there exist noncomputable functions.
 By definition, this process is in itself noncomputable, which means that
 we may expect the proof to fail intuitionistically.
 And so it does: Intuitionistically, the following axiom schema does 
\emph on
not
\emph default
 contradict 
\begin_inset Formula $\HA$
\end_inset

:
\begin_inset Formula 
\[
\forall_{n}\exists_{m}A(n,m)\rightarrow\exists_{k}\forall_{n}[\varphi_{k}(n)\downarrow\land A(n,\varphi_{k}(n))],
\]

\end_inset

or, as it would be more standardly written,
\begin_inset Formula 
\[
\mathrm{CT}_{0}\colon\quad\forall_{n}\exists_{m}A(n,m)\rightarrow\exists_{k}\forall_{n}\exists_{r}[A(n,Ur)\land T(k,n,r)],
\]

\end_inset

where 
\begin_inset Formula $U$
\end_inset

 and 
\begin_inset Formula $T$
\end_inset

 are well-known primitive recursive predicates used to embody computation.
 This axiom schema is known as (the arithmetic form of) Church's Thesis,
 and it is related, but exactly like, the 
\begin_inset Quotes eld
\end_inset

usual
\begin_inset Quotes erd
\end_inset

 Church-Turing thesis.
 The idea is that, if we are able to prove that for every 
\begin_inset Formula $n$
\end_inset

 there exists an 
\begin_inset Formula $m$
\end_inset

 satisfying a predicate, by the BHK interpretation we have presented an
 algorithm which turns 
\begin_inset Formula $n$
\end_inset

 into 
\begin_inset Formula $m$
\end_inset

 (as well as proof of 
\begin_inset Formula $A(n,m)$
\end_inset

).
 This is the algorithm that is represented by the letter 
\begin_inset Formula $k$
\end_inset

.
\end_layout

\begin_layout Point
Church's Thesis is classically false because one may consider 
\begin_inset Formula $A(n,m)$
\end_inset

 to be the graph of a definable but noncomputable function, such as the
 Halting Problem or the Busy Beaver.
 And yet, intuitionistically it is noncontradictory, and has interesting
 consequences.
\end_layout

\begin_layout Point
A common example is one which annoys me because it is usually stated in
 a way that I think is wrong, which is: Intuitionism proves that every total
 function 
\begin_inset Formula $\mathbb{R}\to\mathbb{R}$
\end_inset

 is continuous.
 It doesn't, in the sense that if you start with the same set of axioms
 
\begin_inset Formula $\Gamma$
\end_inset

 (whatever they may be) that allow you to define functions from 
\begin_inset Formula $\mathbb{R}$
\end_inset

 to 
\begin_inset Formula $\mathbb{R}$
\end_inset

, then any conclusion you can draw intuitionistically you can draw classically,
 so there can be no 
\begin_inset Quotes eld
\end_inset

new theorems
\begin_inset Quotes erd
\end_inset

.
 The new theorems appear when you add new, classically inconsistent axioms,
 such as 
\begin_inset Formula $\mathrm{CT}$
\end_inset

.
\end_layout

\begin_layout Point
I was, however, unable to find a satisfactory and rigorous proof (or statement)
 of, e.g., 
\begin_inset Quotes eld
\end_inset


\begin_inset Formula $\mathrm{CT}$
\end_inset

 implies that every 
\begin_inset Formula $f\colon\mathbb{R}\to\mathbb{R}$
\end_inset

 is continuous
\begin_inset Quotes erd
\end_inset

.
 It is possible that this holds in 
\begin_inset Formula $\mathrm{IZF}$
\end_inset

, the intuitionistic analogue of 
\begin_inset Formula $\mathrm{ZF}$
\end_inset

, but Troelstra's book does not appear to present a strong enough system
 for us to quantify over functions of real variable.
 The best we can do, as far as I can tell, is the following metatheorem:
\begin_inset Formula 
\begin{multline*}
\text{For every predicate \ensuremath{A(x,y)}, }\\
\mathrm{EF}+\mathrm{CT}\vdash_{i}(\forall_{x\in\mathbb{R}}\exists_{y\in\mathbb{R}}^{1}A(x,y))\rightarrow\text{The function defined by \ensuremath{A} is continuous.}
\end{multline*}

\end_inset


\end_layout

\end_body
\end_document
